
services:
  api-gateway:
    build: ./gateway
    ports:
      - "3000:3000"
    networks:
      test:
        ipv4_address: 10.5.0.2
  ms-user:
    build: ./user
    # ports:
    #   - "3001:3000"
    networks:
      test:
        ipv4_address: 10.5.0.3
  ms-media:
    build: ./media
    networks:
      test:
        ipv4_address: 10.5.0.4
  ms-library:
    build: ./library
    networks:
      test:
        ipv4_address: 10.5.0.6
  ms-character:
    build: ./character
    networks:
      test:
        ipv4_address: 10.5.0.7
  db-data:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: cinemate
    volumes:
      - ./data-db/data:/var/lib/postgresql/data
      - ./data-db/init:/docker-entrypoint-initdb.d
    ports:
      - "8000:5432"
    networks:
      test:
        ipv4_address: 10.5.0.14
  db-auth:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: auth
    volumes:
      - ./auth-db/data:/var/lib/postgresql/data
      - ./auth-db/init:/docker-entrypoint-initdb.d
    ports:
      - "8001:5432"
    networks:
      test:
        ipv4_address: 10.5.0.15


networks:
  test:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1